(()=>{var e={669:(e,t,s)=>{s(818).config(),e.exports={port:process.env.PORT,adminSecretKey:process.env.ADMIN_SECRET_KEY,mongoDBUri:process.env.MONGO_DB_URL,tokenSecretKey:process.env.TOKEN_SECRET_KEY}},3983:(e,t,s)=>{const a=s(6037),{mongoDBUri:r}=s(669);a.connect(r,{maxPoolSize:4});const n=a.connection;n.on("error",console.error.bind(console,"connection error:")),n.once("open",(()=>{console.log("Databse connected")})),e.exports=n},2438:(e,t,s)=>{const a=s(5124);s(8639);const{mongoDBUri:r}=s(669),n=[];n.push(new a.transports.MongoDB({level:"error",db:r,collection:"logs",format:a.format.combine(a.format.timestamp(),a.format.json(),a.format((e=>(e.meta=e.meta||{},e)))()),options:{useUnifiedTopology:!0}})),n.push(new a.transports.File({filename:"app.log"}));const i=a.createLogger({format:a.format.combine(a.format.timestamp({format:"YYYY-MM-DD HH:mm:ss"}),a.format.printf((e=>`${e.timestamp} [${e.level.toUpperCase()}]: ${e.message} ${e.meta?JSON.stringify(e.meta):""}`))),transports:n,defaultMeta:{service:"user-service"}});e.exports=i},6593:(e,t,s)=>{const a=s(6107),r=s(2438),n=s(829),i=s(5486),d=s(3903),o=s(6928),u=s(9896),{getCurrentIPAddress:l,generateRandomAlphaNumericID:m}=s(2191),{port:g,tokenSecretKey:c}=s(669),p=s(6989),y=s(3804),I=s(8862),f=s(22);e.exports={createAdmin:async(e,t)=>{try{let{name:s,email:r,password:n,mobile:c,gender:p,date_of_birth:I}=e.body;if(!(s&&r&&n&&c))throw new y("Missing required fields","name, email, password, mobile");let f=null;if("profilePic"in e.body||e.files&&e.files.profilePic){let{profilePic:t}=e.files;if(!t)throw new y("No profile pic uploaded");n=await i.hash(n,10);let s=l(),a="/adminImages/",r=d.v4()+"."+t.name.split(".").pop(),m=`http://${s}:${g}${a}`,c=o.join(__dirname,"..","..","adminImages");u.existsSync(c)||u.mkdirSync(c);let p=o.join(c,r);await t.mv(p,(e=>{if(e)throw e})),f={fileName:r,filePath:m}}let h={adminId:m(26),sessionToken:m(51),name:s,email:r,password:n,mobile:c,gender:p,date_of_birth:I,profilePic:f},S=await a.create(h);return t.status(201).send({status:!0,message:"Admin created",data:S})}catch(s){const a={stack:s.stack,details:s.details||"No additional details provided",timestamp:(new Date).toISOString(),ip:e.ip,method:e.method,url:e.originalUrl};if(r.error(`Error in CreateAdmin API: ${s.message}`,{meta:a}),s instanceof y||s instanceof p)return t.status(s.statusCode).send({status:!1,message:s.message,details:s.details});const n=new I(s.message);return t.status(500).send({status:!1,message:n.message})}},adminLogin:async(e,t)=>{try{let{email:s,password:d}=e.body;if(!s||!d)throw new y("Missing required fields","email, password");let o=await a.findOne({email:s});if(!o)throw new y("Bad Request!!!","Invalid email or password");i.compare(d,o.password,(async function(a,i){try{if(a)return t.status(401).send({status:!1,message:a.message});if(i){let e={},a=Date.now(),r=Math.floor(a/1e3),i=n.sign({email:o.email,adminId:o._id.toString(),iat:r},c,{expiresIn:"24h"});return e._id=o._id.toString(),e.email=s,e.token=i,t.setHeader("Authorization","Bearer "+i),o.sessionToken=m(51),await o.save(),t.status(200).send({status:!0,message:"Successfully login",data:e})}throw new f("Login denied","Invalid email or password")}catch(a){const s={stack:a.stack,details:a.details||"No additional details provided",timestamp:(new Date).toISOString(),ip:e.ip,method:e.method,url:e.originalUrl};if(r.error(`Error in AdminLogin API => ${a.message}`,{meta:s}),a instanceof y||a instanceof f)return t.status(a.statusCode).send({status:!1,message:a.message,details:a.details});const n=new I(a.message);return t.status(500).send({status:!1,message:n.message})}}))}catch(s){const a={stack:s.stack,details:s.details||"No additional details provided",timestamp:(new Date).toISOString(),ip:e.ip,method:e.method,url:e.originalUrl};if(r.error(`Error in AdminLogin API: ${s.message}`,{meta:a}),s instanceof y)return t.status(s.statusCode).send({status:!1,message:s.message,details:s.details});const n=new I(s.message);return t.status(500).send({status:!1,message:n.message})}},getAllBookingsOfUser:async(e,t)=>{try{const{adminId:s,sessionToken:r,userId:n}=e.params;if(!s||!r)return t.status(400).send({status:!1,message:"All fields are required"});let i=await a.findOne({adminId:s,sessionToken:r});if(!i)return t.status(404).send({status:!1,message:"Bad Reques!!!"});if(i.adminId===s&&i.sessionToken===r){if(!await userModel.findOne({userId:n}))return t.status(404).send({status:!1,message:"User Not Found"});let e=await bookingModel.find({userId:n});return t.status(200).send({status:!0,message:"Success",data:e})}return t.status(400).send({status:!1,message:"Session Expired"})}catch(e){return r.error(`Get All Bookings of User API: Internal Server Error. \n${e}`),t.status(500).send({status:!1,message:e.message})}},getOneDayBookings:async(e,t)=>{try{const{adminId:s,sessionToken:r}=e.params;if(!s||!r)return t.status(400).send({status:!1,message:"All fields are required"});let n=await a.findOne({adminId:s,sessionToken:r});if(!n)return t.status(404).send({status:!1,message:"Bad Reques!!!"});if(n.adminId===s&&n.sessionToken===r){let s;if(e.params.date)s=e.params.date;else{let e=new Date;const t=e.getFullYear();s=`${t}-${String(e.getMonth()+1).padStart(2,"0")}-${String(e.getDate()).padStart(2,"0")}`}let a=await bookingModel.find({BookingDate:s}),r=0;for(let e of a)r+=e.grand_total;let n={totalBookings:a,oneDayRevenue:r};return t.status(200).send({status:!0,message:"Success",data:n})}return t.status(400).send({status:!1,message:"Session Expired"})}catch(e){return t.status(500).send({status:!1,message:e.message})}},getOneWeekBookings:async(e,t)=>{try{let{adminId:s,sessionToken:r}=e.params;if(!s||!r)return t.status(400).send({status:!1,message:"All fields are required"});let n=await a.findOne({adminId:s,sessionToken:r});if(!n)return t.status(404).send({status:!1,message:"Bad Reques!!!"});if(n.adminId===s&&n.sessionToken===r){let s,a;if(e.params.startDate&&e.params.endDate)s=e.params.startDate,a=e.params.endDate;else{const e=new Date,t=e.getFullYear();a=`${t}-${String(e.getMonth()+1).padStart(2,"0")}-${String(e.getDate()).padStart(2,"0")}`;const r=new Date(e.getTime()-6048e5),n=r.getFullYear();s=`${n}-${String(r.getMonth()+1).padStart(2,"0")}-${String(r.getDate()).padStart(2,"0")}`}let r=await bookingModel.find({BookingDate:{$gte:s,$lte:a}}),n=0;if(r.length)for(let e of r)n+=e.grand_total;let i={oneWeekBookings:r,grandTotal:n};return t.status(200).send({status:!0,message:"Success",data:i})}return t.status(403).send({status:!1,message:"Session Expired"})}catch(e){return t.status(500).send({status:!1,message:e.message})}},getOneMonthBookings:async(e,t)=>{try{const{adminId:s,sessionToken:r,month:n,year:i}=e.params;if(!(s&&r&&n&&i))return t.status(400).send({status:!1,message:"All fields are required"});let d=await a.findOne({adminId:s,sessionToken:r});if(!d)return t.status(404).send({status:!1,message:"Bad Reques!!!"});if(d.adminId===s&&d.sessionToken===r){const e=`${i}-${n}-01`,s=`${i}-${n}-31`,a=await bookingModel.find({createdAt:{$gte:e,$lte:s}});let r=0;if(a.length)for(let e of a)r+=e.grand_total;let d={oneMonthBookings:a,oneMonthRevenue:r};return t.status(200).send({status:!0,message:"Success",data:d})}return t.status(400).send({status:!1,message:"Session Expired"})}catch(e){return t.status(500).send({status:!1,message:e.message})}},getOneYearBookings:async(e,t)=>{try{const{adminId:s,sessionToken:r,year:n}=e.params;if(!s||!r||!n)return t.status(400).send({status:!1,message:"All fields are required"});let i=await a.findOne({adminId:s,sessionToken:r});if(!i)return t.status(404).send({status:!1,message:"Bad Reques!!!"});if(i.adminId===s&&i.sessionToken===r){const e=`${n}-01-01`,s=`${n}-12-31`;let a=await bookingModel.find({createdAt:{$gte:e,$lte:s}}),r=0;if(a.length)for(let e of a)r+=e.grand_total;let i={oneYearRequests:a,oneYearRevenue:r};return t.status(200).send({status:!0,message:"Success",data:i})}return t.status(400).send({status:!1,message:"Session Expired"})}catch(e){return t.status(500).send({status:!1,message:e.message})}}}},452:(e,t,s)=>{const a=s(4406),r=s(5003),n=s(3903),i=s(6928),d=s(9896),{getCurrentIPAddress:o}=s(2191),{port:u}=s(669),{isValidObjectId:l}=s(6037),m=s(6989),g=s(3804),c=s(8862),p=s(2438);e.exports={addCategory:async(e,t)=>{try{let{name:s,description:r}=e.body,{category_image:d}=e.files;if(!d)throw new g("No category image uploaded","category_image");let l=o(),m="/categoryImages/",c=n.v4()+"."+d.name.split(".").pop(),p=`http://${l}:${u}${m}`,y=i.join(__dirname,"..","..","categoryImages",c);d.mv(y,(e=>{if(e)throw e}));let I={name:s,description:r,category_image:{fileName:c,filePath:p}},f=await a.create(I);return t.status(201).send({status:!0,message:"Success",data:f})}catch(s){const a={stack:s.stack,details:s.details||"No additional details provided",timestamp:(new Date).toISOString(),ip:e.ip,method:e.method,url:e.originalUrl};return s instanceof g?(p.error(`Error in Add Category API: Bad Request. ${s.message}`,{meta:a}),t.status(400).send({status:!1,message:s.message,details:s.details})):s instanceof c?(p.error(`Error in Add Category API: Internal Server Error. ${s.message}`,{meta:a}),t.status(500).send({status:!1,message:s.message,details:s.details})):s instanceof m?(p.error(`Error in Add Category API: Not Found Error. ${s.message}`,{meta:a}),t.status(500).send({status:!1,message:s.message,details:s.details})):(p.error(`Error in Add Category API: ${s.message}`,{meta:a}),t.status(500).send({status:!1,message:s.message}))}},getCategoryById:async(e,t)=>{try{let{categoryId:s}=e.params;if(!s)throw new g(s,"Please provide the categoryId");if(!l(s))throw new g(s,"Invalid categoryId");let n=await a.findById(s);if(!n)throw new m("Category",s);let i=await r.find({categoryId:n._id});return t.status(200).send({status:!0,message:"Success",data:n,products:i})}catch(s){const a={stack:s.stack,details:s.details||"No additional details provided",timestamp:(new Date).toISOString(),ip:e.ip,method:e.method,url:e.originalUrl};return s instanceof g?(p.error(`Error in Get Category API: Bad Request. ${s.message}`,{meta:a}),t.status(400).send({status:!1,message:s.message,details:s.details})):s instanceof c?(p.error(`Error in Get Category API: Internal Server Error. ${s.message}`,{meta:a}),t.status(500).send({status:!1,message:s.message,details:s.details})):s instanceof m?(p.error(`Error in Get Category API: Not Found Error. ${s.message}`,{meta:a}),t.status(500).send({status:!1,message:s.message,details:s.details})):(p.error(`Error in Get Category API: ${s.message}`,{meta:a}),t.status(500).send({status:!1,message:s.message}))}},getAllCategories:async(e,t)=>{try{let e=await a.find({});return t.status(200).send({status:!0,message:"Success",data:e})}catch(e){return t.status(500).send({status:!1,message:e.message})}},updateCategory:async(e,t)=>{try{const{categoryId:s}=e.params;if(!s)throw new g(s,"Please provide the categoryId");if(!l(s))throw new g(s,"Invalid categoryId");let r=await a.findById(s);if(!r)throw new m("category",s);let c=e.body;if("name"in c&&(r.name=c.name),"description"in c&&(r.description=c.description),"category_image"in c||e.files&&e.files.category_image){let{category_image:t}=e.files;if(!t)throw new g(t,"No category image uploaded");let s=r.category_image.fileName,a=i.join(__dirname,"..","..","categoryImages",s);d.existsSync(a)&&d.unlinkSync(a);let l=o(),m="/categoryImages/",c=n.v4()+"."+t.name.split(".").pop(),p=`http://${l}:${u}${m}`,y=i.join(__dirname,"..","..","categoryImages",c);t.mv(y,(e=>{if(e)throw e}));let I={fileName:c,filePath:p};r.category_image=I}return await r.save(),t.status(200).send({status:!0,message:"Category updated successfully",data:r})}catch(s){const a={stack:s.stack,details:s.details||"No additional details provided",timestamp:(new Date).toISOString(),ip:e.ip,method:e.method,url:e.originalUrl};return s instanceof g?(p.error(`Error in Update Category API: Bad Request(Client Side Error). ${s.message}`,{meta:a}),t.status(400).send({status:!1,message:s.message,details:s.details})):s instanceof c?(p.error(`Error in Update Category API: Internal Server Error(Server Side Error). ${s.message}`,{meta:a}),t.status(500).send({status:!1,message:s.message,details:s.details})):s instanceof m?(p.error(`Error in Update Category API: Not Found Error. ${s.message}`,{meta:a}),t.status(500).send({status:!1,message:s.message,details:s.details})):(p.error(`Error in Update Category API: ${s.message}`,{meta:a}),t.status(500).send({status:!1,message:s.message}))}},deleteCategory:async(e,t)=>{try{let{categoryId:s}=e.params;if(!s)throw new g(s,"Please provide the categoryId");if(!l(s))throw new g(s,"Invalid categoryId");let r=await a.findById(s);if(!r)throw new m("category",s);let n=r.category_image.fileName,o=i.join(__dirname,"..","..","categoryImages",n);return d.existsSync(o)&&d.unlinkSync(o),await a.deleteOne({_id:s}),t.status(200).send({status:!0,message:"Category deleted successfully"})}catch(s){const a={stack:s.stack,details:s.details||"No additional details provided",timestamp:(new Date).toISOString(),ip:e.ip,method:e.method,url:e.originalUrl};return s instanceof g?(p.error(`Error in Delete Category API: Bad Request(Client Side Error). ${s.message}`,{meta:a}),t.status(400).send({status:!1,message:s.message,details:s.details})):s instanceof c?(p.error(`Error in Delete Category API: Internal Server Error(Server Side Error). ${s.message}`,{meta:a}),t.status(500).send({status:!1,message:s.message,details:s.details})):s instanceof m?(p.error(`Error in Delete Category API: Not Found Error. ${s.message}`,{meta:a}),t.status(500).send({status:!1,message:s.message,details:s.details})):(p.error(`Error in Delete Category API: ${s.message}`,{meta:a}),t.status(500).send({status:!1,message:s.message}))}}}},2020:(e,t,s)=>{const a=s(9278),r=s(2438);e.exports={loginCustomer:async(e,t)=>{try{let{customerId:s,dialingCode:r,mobile:n,HCFToken:i}=e.body,d=await a.findOne({customerId:s,mobile:n});if(d)return t.status(200).send({status:!0,message:"Login successfully",loginData:d});{let e={customerId:s,dialingCode:r,mobile:n,HCFToken:i},d=await a.create(e);return t.status(200).send({status:!0,message:"Login successfully",loginData:d})}}catch(s){const a={stack:s.stack,details:s.details||"No additional details provided",timestamp:(new Date).toISOString(),ip:e.ip,method:e.method,url:e.originalUrl};return r.error(`Error in loginCustomer API: ${s.message}`,{meta:a}),t.status(500).send({status:!1,message:s.message})}},getAllCustomers:async(e,t)=>{try{let e=await a.find({});return t.status(200).send({status:!0,message:"Success",data:e})}catch(s){const a={stack:s.stack,details:s.details||"No additional details provided",timestamp:(new Date).toISOString(),ip:e.ip,method:e.method,url:e.originalUrl};return r.error(`Error in loginCustomer API: ${s.message}`,{meta:a}),t.status(500).send({status:!1,message:s.message})}},getCustomerById:async(e,t)=>{try{let{customerId:s}=e.params;return s?await a.findOne({customerId:s})?t.status(200).send({status:!0,message:"Success"}):t.status(404).send({status:!1,message:"customer not found"}):t.status(400).send({status:!1,message:"customerId is required"})}catch(s){const a={stack:s.stack,details:s.details||"No additional details provided",timestamp:(new Date).toISOString(),ip:e.ip,method:e.method,url:e.originalUrl};return r.error(`Error in loginCustomer API: ${s.message}`,{meta:a}),t.status(500).send({status:!1,message:s.message})}},updateCustomerById:async(e,t)=>{try{let{customerId:s}=e.params;if(!s)return t.status(400).send({status:!1,message:"customerId is required"});let r=await a.findOne({customerId:s});if(!r)return t.status(404).send({status:!1,message:"Customer Not found"});let n=e.body;return"name"in n&&(r.name=n.name),"email"in n&&(r.email=n.email),"gender"in n&&(r.gender=n.gender),"DOB"in n&&(r.DOB=n.DOB),"address"in n&&(r.address=n.address),await r.save(),t.status(200).send({status:!0,message:"success",data:r})}catch(s){const a={stack:s.stack,details:s.details||"No additional details provided",timestamp:(new Date).toISOString(),ip:e.ip,method:e.method,url:e.originalUrl};return r.error(`Error in loginCustomer API: ${s.message}`,{meta:a}),t.status(500).send({status:!1,message:s.message})}},deleteCustomerById:async(e,t)=>{try{let{customerId:s}=e.params,{question:r,feedback:n}=e.body;return await a.findOne({customerId:s})?await a.deleteOne({customerId:s})?t.status(200).send({status:!0,message:"customer deleted successfully"}):t.status(404).send({status:!1,message:"Customer already deleted"}):t.status(404).send({status:!1,message:"Customer not found"})}catch(s){const a={stack:s.stack,details:s.details||"No additional details provided",timestamp:(new Date).toISOString(),ip:e.ip,method:e.method,url:e.originalUrl};return r.error(`Error in loginCustomer API: ${s.message}`,{meta:a}),t.status(500).send({status:!1,message:s.message})}}}},9506:(e,t,s)=>{const a=s(4915),r=s(4470),{getCurrentIPAddress:n}=s(2191),i=s(3903),d=s(6928),o=s(9896),{port:u,adminSecretKey:l}=s(669),{isValidObjectId:m}=s(6037),g=s(2438);e.exports={createDashboard:async(e,t)=>{try{const{customerId:s}=e.params;let a=null;return s&&(a=await r.find({customerId:s})),t.status(200).send({status:!0,message:"Success",data:{myOrders:a}})}catch(s){let a={stack:s.stack,details:s.details||"No additional details provided",timestamp:(new Date).toISOString(),ip:e.ip,method:e.method,url:e.originalUrl};return g.error(`Error in getDashboard API: ${s.message}`,{meta:a}),t.status(400).send({status:!1,message:s.message})}},getDashboard:async(e,t)=>{try{let{userId:s}=e.params;if(!s)return t.status(400).send({status:!1,message:"UserId is required"});let r=await a.findOne({userId:s});if(!r)return t.status(400).send({status:!1,message:"Restaurant not found"});let n=r.banners;return t.status(200).send({status:!0,message:"Success",banners:n})}catch(s){let a={stack:s.stack,details:s.details||"No additional details provided",timestamp:(new Date).toISOString(),ip:e.ip,method:e.method,url:e.originalUrl};return g.error(`Error in getDashboard API: ${s.message}`,{meta:a}),t.status(400).send({status:!1,message:s.message})}},updateBannerImages:async(e,t)=>{try{let{userId:s}=e.params;if(!s)return t.status(400).send({status:!1,message:"Bad Request!!!"});let r=await a.findOne({userId:s});if(!r)return t.status(400).send({status:!1,message:"Restaurant Not found"});let{ImageModel:l}=e.body,m=JSON.parse(l),g=e.files.bannerImage;if(!g)return t.status(400).send({status:!1,message:"No banner image uploaded"});let c=m.index,p=(m.img_id&&m.img_id,m.imageName,m.isNewPick),y=n(),I="/bannerImages/",f=i.v4()+"."+g.name.split(".").pop(),h=`http://${y}:${u}${I}`,S=d.join(__dirname,"..","..","bannerImages",f);if(p){g.mv(S,(e=>{if(e)throw e}));let e={fileName:f,filePath:h};return r.banners.push(e),await r.save(),t.status(200).send({status:!0,message:"Banner added successfully",banners:r.banners})}{let e=r.banners[c].imageName,s=d.join(__dirname,"..","..","bannerImages",e);o.existsSync(s)&&o.unlinkSync(s),g.mv(S,(e=>{if(e)throw e}));let a={fileName:f,filePath:h};return r.banners[c]=a,await r.save(),t.status(200).send({status:!0,message:"Banner updated successfully",banners:r.banners})}}catch(s){let a={stack:s.stack,details:s.details||"No additioanl details provided",timestamp:(new Date).toISOString(),ip:e.ip,method:e.method,url:e.originalUrl};return g.error(`Error in updateBannerImages API: ${s.message}`,{meta:a}),t.status(400).send({status:!1,message:s.message})}},deleteBannerImage:async(e,t)=>{try{let{userId:s,imageId:r}=e.params;if(!s||!r)return t.status(400).send({status:!1,message:"All fields are required"});let n=await a.findOne({userId:s});if(!n)return t.status(400).send({status:!1,message:"Not Found!!!"});if(n.banners.length)for(let e=0;e<n.banners.length;e++)if(r===n.banners[e]._id.toString()){let t=n.banners;t.splice(e,1),n.banners=t,await n.save()}return t.status(200).send({status:!0,message:"Banner deleted successfully",banners:n.banners})}catch(s){let a={stack:s.stack,details:s.details||"No additional details provided",timestamp:(new Date).toISOString(),ip:e.ip,method:e.method,url:e.originalUrl};return g.error(`Error in deleteBannerImage API: ${s.message}`,{meta:a}),t.status(400).send({status:!1,message:s.message})}},getAllBannerImages:async(e,t)=>{try{let{userId:s}=e.params;if(!s)return t.status(400).send({status:!1,message:"userId is required"});let r=await a.findOne({userId:s});if(!r)return t.status(400).send({status:!1,message:"Restaurant not found"});let n=r.banners;return t.status(200).send({status:!0,message:"Success",banners:n})}catch(s){let a={stack:s.stack,details:s.details||"No additional details provided",timestamp:new Date.toISOString,ip:e.ip,method:e.method,url:e.originalUrl};return g.error(`Error in getAllBannerImages API: ${s.message}`,{meta:a}),t.status(400).send({status:!1,message:s.message})}}}},7295:(e,t,s)=>{const a=s(5003),r=s(4915),n=s(5845),{calculateDistance:d}=s(7687),o=s(3903),u=s(6928),l=s(9896),{getCurrentIPAddress:m,generateRandomAlphaNumericID:g}=s(2191),{port:c}=s(669),{isValidObjectId:p}=s(6037),{adminSecretKey:y}=s(669),I=s(2438);e.exports={addItems:async(e,t)=>{try{let{userId:s}=e.params;if(!s)return t.status(400).send({status:!1,message:"User Id is required"});if(!await r.findOne({userId:s}))return t.status(400).send({status:!1,message:"Restaurant Not Found"});let{menuId:i,item_name:d,menuName:o,description:u,selling_price:l,isTaxable:m,preparing_time:g,notes:c,visit_count:p,status:y,seo_keywords:I,video_link:f,isVeg:h}=e.body,S={userId:s,menuId:i,item_name:d,menuName:o,description:u,selling_price:l,isTaxable:m,preparing_time:g,notes:c,visit_count:p,status:y,seo_keywords:I,video_link:f||"",isVeg:h},_=await a.create(S);const w=await n.aggregate([{$match:{productId:_._id}},{$group:{_id:null,averageRating:{$avg:"$customers.rating"},totalRatingCount:{$sum:1}}}]),b=w.length>0?w[0].averageRating:0,v=w.length>0?w[0].totalRatingCount:0;return _.averageRating=b,_.totalRatingCount=v,await _.save(),t.status(200).send({status:!0,message:"Item Added Successfully",product:_,averageRating:b,totalRatingCount:v})}catch(e){return t.status(400).send({status:!1,message:e.message})}},addUpdateItemImages:async(e,t)=>{try{let{itemId:s}=e.params;if(!s)return t.status(400).send({status:!1,message:"Item Id is required"});if(!p(s))return t.status(400).send({status:!1,message:"Invalid itemId"});let r=await a.findById(s);if(!r)return t.status(400).send({status:!1,message:"Item Not Found"});let{ImageModel:n}=e.body,i=JSON.parse(n),d=e.files.itemImage;if(!d)return t.status(400).send({status:!1,message:"No item image uploaded"});let{index:g,img_id:y,imageName:I,isNewPick:f}=i,h=m(),S="/itemImages/",_=o.v4()+"."+d.name.split(".").pop(),w=`http://${h}:${c}${S}`,b=u.join(__dirname,"..","..","itemImages",_);if(f){d.mv(b,(e=>{if(e)throw e}));let e={fileName:_,filePath:w};return r.item_images.push(e),await r.save(),t.status(200).send({status:!0,message:"Item image added successfully",data:r.item_images})}{let e=r.item_images[g].imgName,s=u.join(__dirname,"..","..","itemImages",e);l.existsSync(s)&&l.unlinkSync(s),d.mv(b,(e=>{if(e)throw e}));let a={fileName:_,filePath:w};return r.item_images[g]=a,await r.save(),t.status(200).send({status:!0,message:"Item image updated successfully",data:r.item_images})}}catch(e){return t.status(400).send({status:!1,message:e.message})}},deleteItemImages:async(e,t)=>{try{let{itemId:s,imageId:r}=e.params;if(!r)return t.status(400).send({status:!1,message:"all fields are required"});let n=await a.findById(s);if(!n)return t.status(400).send({status:!1,message:"Item not found"});if(n.item_images.length)for(let e=0;e<n.item_images.length;e++)if(r===n.item_images[e]._id.toString()){let t=n.item_images;t.splice(e,1),n.item_images=t,await n.save()}return t.status(200).send({status:!0,message:"Image deleted successfully",data:n.item_images})}catch(e){return t.status(400).send({status:!1,message:e.message})}},getAllItems:async(e,t)=>{try{let{userId:s}=e.params;if(!s)return t.status(400).send({status:!1,message:"UserId is required"});let r=await a.find({userId:s});return t.status(200).send({status:!0,message:"Success",data:r})}catch(e){return t.status(400).send({status:!1,message:e.message})}},getItemById:async(e,t)=>{try{const{itemId:s,userId:n}=e.params;if(!s||!n)return t.status(400).send({status:!1,message:"All fields are required"});if(!p(s))return t.status(400).send({status:!1,message:"Invalid Item Id"});let i=await a.findById(s);if(!i)return t.status(400).send({status:!1,message:"Item Not Found"});let d=await r.findOne({userId:n});return d?t.status(200).send({status:!0,message:"Success",restaurant:d,product:i}):t.status(400).send({status:!1,message:"restaurant Not Found"})}catch(s){let a={stack:s.stack,details:s.details||"No additional details provided",timestamp:(new Date).toISOString(),ip:e.ip,method:e.method,url:e.originalUrl};return I.error(`Error in authenticateAdmin API: ${s.message}`,{meta:a}),t.status(400).send({status:!1,message:s.message})}},getItemsBySearchKeywords:async(e,t)=>{try{let{categoryId:s}=e.params,{search_data:r}=e.body;if(s){let e=await a.find({categoryId:s});return t.status(200).send({status:!0,message:"Success",data:e})}{let e={$or:[{item_name:{$regex:r,$options:i}},{description:{$regex:r,$options:i}},{menuName:{$regex:r,$options:i}},{isVeg:{$regex:r,$options:i}}]},s=await a.find(e);return t.status(200).send({status:!0,message:"Success",data:s})}}catch(s){let a={stack:s.stack,details:s.details||"No additional details provided",timestamp:(new Date).toISOString(),ip:e.ip,method:e.method,url:e.originalUrl};return I.error(`Error in getItemsBySearchKeywords API: ${s.message}`,{meta:a}),t.status(400).send({status:!1,message:s.message})}},updateItemById:async(e,t)=>{try{let{itemId:s}=e.params;if(!s)return t.status(400).send({status:!1,message:"Item Id is required"});if(!p(s))return t.status(400).send({status:!1,message:"Invalid Item Id"});let r=await a.findById(s);if(!r)return t.status(400).send({status:!1,message:"Item Not Found"});let n=e.body;return"item_name"in n&&(r.item_name=n.item_name),"description"in n&&(r.description=n.description),"selling_price"in n&&(r.selling_price=n.selling_price),"isTaxable"in n&&(r.isTaxable=n.isTaxable),"preparing_time"in n&&(r.preparing_time=n.preparing_time),"notes"in n&&(r.notes=n.notes),"visit_count"in n&&(r.visit_count=n.visit_count),"status"in n&&(r.status=n.status),"seo_keywords"in n&&(r.seo_keywords=n.seo_keywords),"video_link"in n&&(r.video_link=n.video_link),"isVeg"in n&&(r.isVeg=n.isVeg),await r.save(),t.status(200).send({status:!0,message:"Item Updated Successfully",data:r})}catch(s){let a={stack:s.stack,details:s.details||"No additional details provided",timestamp:(new Date).toISOString(),ip:e.ip,method:e.method,url:e.originalUrl};return I.error(`Error in updateItemById API: ${s.message}`,{meta:a}),t.status(400).send({status:!1,message:s.message})}},deleteItemById:async(e,t)=>{try{const{itemId:s}=e.params;if(!s)return t.status(400).send({status:!1,message:"Item Id is required"});if(!p(s))return t.status(400).send({status:!1,message:"Invalid Item Id"});let r=await a.findById(s);if(!r)return t.status(400).send({status:!1,message:"Item Not Found"});let n=r.item_images.imgName;if(n){let e=u.join(__dirname,"..","..","items",n);l.existsSync(e)&&l.unlinkSync(e)}return await a.deleteOne({_id:s}),t.status(200).send({status:!0,message:"Item deleted successfully"})}catch(s){let a={stack:s.stack,details:s.details||"No additional details provided",timestamp:(new Date).toISOString(),ip:e.ip,method:e.method,url:e.originalUrl};return I.error(`Error in deleteItemById API: ${s.message}`,{meta:a}),t.status(400).send({status:!1,message:s.message})}},getItemsByLocationOrSearchData:async(e,t)=>{try{let{BY_LOCATION:s}=e.params,n=e.body,{search_data:o}=n;if(!s&&!o){let e=await a.aggregate([{$sample:{size:10}}]);return t.status(200).send({status:!0,message:"success",data:e})}if(s&&!o){let e=n.latitude?n.latitude:null,s=n.longitude?n.longitude:null,i=await r.find({}),o=[];if(i.length){for(let t of i){let r=null,n=[];e&&s&&t.location.latitude&&t.location.longitude&&(r=d(e,s,t.location.latitude,t.location.longitude)),n=await a.find({}).limit(5);let i={items:n,distance:r};o.push(i)}return o.sort(((e,t)=>e.distance-t.distance)),console.log("inside location block",o),t.status(200).send({status:!0,message:"success",data:o})}}else{if(!s&&o){let e={$or:[{item_name:{$regex:o,$options:i}},{description:{$regex:o,$options:i}},{menuName:{$regex:o,$options:i}},{isVeg:{$regex:o,$options:i}}]},s=await a.find(e);return t.status(200).send({status:!0,message:"Success",data:s})}if(s&&o){let e=n.latitude?n.latitude:null,s=n.longitude?n.longitude:null,i=await r.find({}),u=[];if(i.length){for(let t of i){let r=null,n=[];e&&s&&t.location.latitude&&t.location.longitude&&(r=d(e,s,t.location.latitude,t.location.longitude));let i={$or:[{item_name:{$regex:o,$options:"i"}},{description:{$regex:o,$options:"i"}},{menuName:{$regex:o,$options:"i"}},{isVeg:{$regex:o,$options:"i"}}]};n=await a.find(i).limit(5);let l={items:n,distance:r};u.push(l)}u.sort(((e,t)=>e.distance-t.distance));let r=[];for(let e of u)r.push(...e.items);return t.status(200).send({status:!0,message:"success",data:r})}}}}catch(s){let a={stack:s.stack,details:s.details||"No additional details provided",timestamp:(new Date).toISOString(),ip:e.ip,method:e.method,url:e.originalUrl};return I.error(`Error in getItemsByLocationOrSearchData API: ${s.message}`,{meta:a}),t.status(400).send({status:!1,message:s.message})}}}},8671:(e,t,s)=>{const a=s(1323),r=s(3903),n=s(6928),i=s(9896),{getCurrentIPAddress:d,generateRandomAlphaNumericID:o}=s(2191),{port:u}=s(669),l=s(4915),{isValidObjectId:m}=s(6037),g=s(2438);e.exports={addMenu:async(e,t)=>{try{let{userId:s}=e.params;if(!s)return t.status(400).send({status:!1,message:"User Id is required"});let{title:o,description:m,isActive:g}=e.body;if(!o||!m)return t.status(400).send({status:!1,message:"all fields are required"});if(!await l.findOne({userId:s}))return t.status(400).send({status:!1,message:"Restaurant not found"});let{File_Extension:c,File_Path:p,File_data:y,File_name:I}=e.body.thumbnail,f=Buffer.from(y,"base64"),h=d(),S="/menuImages/",_=r.v4()+c,w=`http://${h}:${u}${S}`,b=n.join(__dirname,"..","..","menuImages",_);i.writeFileSync(b,f);let v={title:o,description:m,thumbnail:{fileName:_,filePath:w},isActive:g,userId:s},N=await a.create(v);return t.status(200).send({status:!0,message:"Menu added successfully",data:N})}catch(s){let a={stack:s.stack,details:s.details,timestamp:(new Date).toISOString(),ip:e.ip,method:e.method,url:e.originalUrl};return g.error(`Error in addMenu API: ${s.message}`,{meta:a}),t.status(400).send({status:!1,message:s.message})}},getAllMenus:async(e,t)=>{try{let{userId:s}=e.params;if(!s)return t.status(400).send({status:!1,message:"userId is required"});let r=await a.find({userId:s});return t.status(200).send({status:!0,message:"Success",munus:r})}catch(s){let a={stack:s.stack,details:s.details||"No additional details provided",timestamp:(new Date).toISOString(),ip:e.ip,method:e.method,url:e.originalUrl};return g.error(`Error in getAllMenus API: ${s.message}`,{meta:a}),t.status(400).send({status:!1,message:s.message})}},getMenuById:async(e,t)=>{try{let{menuId:s}=e.params;if(!s)return t.status(400).send({status:!1,message:"menuId is required"});if(!m(s))return t.status(400).send({status:!1,message:"Invalid menuId"});let r=await a.findById(s);return r?t.status(200).send({status:!0,message:"Success",data:r}):t.status(400).send({status:!1,message:"Menu not found"})}catch(s){let a={stack:s.stack,details:s.details,timestamp:(new Date).toISOString(),ip:e.ip,method:e.method,url:e.originalUrl};return g.error(`Error in getMenuById API: ${s.message}`,{meta:a}),t.status(400).send({status:!1,message:s.message})}},updateMenu:async(e,t)=>{try{const{menuId:s}=e.params;if(!s)return t.status(400).send({status:!1,message:"menuId is required"});if(!m(s))return t.status(400).send({status:!1,message:"Invalid menuId"});let o=await a.findById(s);if(!o)return t.status(400).send({status:!1,message:"Menu not found"});let l=e.body;if("title"in l&&(o.title=l.title),"description"in l&&(o.description=l.description),"isActive"in l&&(o.isActive=l.isActive),"thumbnail"in l){let t=o.thumbnail.imgName,s=n.join(__dirname,"..","..","menus",t);i.existsSync(s)&&i.unlinkSync(s);let{File_Extension:a,File_Path:l,File_data:m,File_name:g}=e.body.thumbnail,c=Buffer.from(m,"base64"),p="/menus/",y=d(),I=r.v4()+a,f=`http://${y}:${u}${p}`,h=n.join(__dirname,"..","..","menus",I);i.writeFileSync(h,c);let S={imgName:I,imgPath:f};o.thumbnail=S}return await o.save(),t.status(200).send({status:!0,message:"Menu updated successfully",data:o})}catch(s){let a={stack:s.stack,details:s.details||"No additional details provided",timestamp:(new Date).toISOString(),ip:e.ip,method:e.method,url:e.originalUrl};return g.error(`Error in updateMenu API: ${s.message}`,{meta:a}),t.status(400).send({status:!1,message:s.message})}},deleteMenu:async(e,t)=>{try{const{menuId:s}=e.params;if(!s)return t.status(400).send({status:!1,message:"menuId is required"});if(!m(s))return t.status(400).send({status:!1,message:"Invalid menuId"});let r=await a.findById(s);if(!r)return t.status(400).send({status:!1,message:"Menu not found"});let d=r.thumbnail.imgName,o=n.join(__dirname,"..","..","menus",d);return i.existsSync(o)&&i.unlinkSync(o),await a.deleteOne({_id:s}),t.status(200).send({status:!0,message:"Menu deleted successfully"})}catch(s){let a={stack:s.stack,details:s.details||"No additional details provided",timestamp:(new Date).toISOString(),ip:e.ip,method:e.method,url:e.originalUrl};return g.error(`Error in deleteMenu API: ${s.message}`,{meta:a}),t.status(400).send({status:!1,message:s.message})}}}},9486:(e,t,s)=>{const{isValidObjectId:a}=s(6037),r=s(4470),n=s(4915),i=s(9278),d=s(3903),o=(s(9896),s(6928));let{getCurrentIPAddress:u,generateRandomNumericId:l}=s(2191);const{port:m}=s(669),{isValidStatus:g}=s(2191);e.exports={createOrder:async(e,t)=>{try{const{customerId:s}=e.params;if(!s)return t.status(400).send({status:!1,message:"Customer Id Id is required"});if(!await i.findOne({customerId:s}))return t.status(400).send({status:!1,message:"Customer not found"});let{f_name:a,l_name:n,email:d,mobile:o,address:u,apartment:m,city:g,post_code:c,state:p,state_code:y,countryCode:I,countryName:f,productList:h,totalProduct:S,tax:_,CGST:w,SGST:b,total:v,grandTotal:N,question:O,feedback:k}=e.body,A=[];for(let e of h){let{productId:t,restaurant_id:s,MrpTotal:a,SubTotal:r,qty:n,isVeg:i,isTaxable:d,averageRating:o,preparing_time:u,cartQty:l,description:m,mrp:g,name:c,salePrice:p,skuCode:y,thumbnail:I,totalRatingCount:f}=e;A.push({productId:t,restaurant_id:s,MrpTotal:a,SubTotal:r,qty:n,isVeg:i,isTaxable:d,averageRating:o,preparing_time:u,cartQty:l,description:m,mrp:g,name:c,salePrice:p,skuCode:y,thumbnail:I,totalRatingCount:f})}let $={orderID:l(10),customerId:s,f_name:a,l_name:n,email:d,mobile:o,address:u,apartment:m,city:g,post_code:c,state:p,state_code:y,countryCode:I,countryName:f,productList:h,totalProduct:S,tax:_,CGST:w,SGST:b,total:v,grandTotal:N,question:O,feedback:k},B=await r.create($);return t.status(200).send({status:!0,message:"Order created successfully",data:B})}catch(e){return t.status(500).send({status:!1,message:e.message})}},getAllOrders:async(e,t)=>{try{let{restaurantId:s}=e.params;if(!s)return t.status(400).send({status:!1,message:"Restaurant Id is required"});let a=await r.find({"productList.restaurant_id":s});return t.status(200).send({status:!0,message:"Success",data:a})}catch(e){return t.status(500).send({status:!1,message:e.message})}},getOrderById:async(e,t)=>{try{let{orderId:s}=e.params;if(!s)return t.status(400).send({status:!1,message:"Order Id is required"});if(!a(s))return t.status(400).send({status:!1,message:"Invalid Order Id"});let n=await r.findById(s);return n?t.status(200).send({status:!0,message:"Success",data:n}):t.status(400).send({status:!1,message:"Order not found"})}catch(e){return t.status(500).send({status:!1,message:e.message})}},updateOrderById:async(e,t)=>{try{const{orderId:s,restaurant_id:i,customer_name:d}=e.params;if(!s)return t.status(400).send({status:!1,message:"OrderId is required"});if(!a(s))return t.status(400).send({status:!1,message:"Invalid OrderId"});let o,u=await r.findById(s);if(!u)return t.status(400).send({status:!1,message:"Order not found"});if(i&&(o=await n.findOne({userId:i}),!o))return t.status(400).send({status:!1,message:"Restaurant Not Found"});let l=o||d,m=e.body;if("table_name"in m&&(u.table_name=m.table_name),"customer_name"in m&&(u.customer_name=m.customer_name),"customer_mobile"in m&&(u.customer_mobile=m.customer_mobile),"head_count"in m&&(u.head_count=m.head_count),"status"in m&&(u.status=m.status),"notes"in m&&(u.notes=m.notes),"item_list"in m&&u.item_list.length)for(let e of u.item_list)"item_name"in m.item_list&&(e.item_name=m.item_list.item_name),"qty"in m.item_list&&(e.qty=m.item_list.qty),"selling_price"in m.item_list&&(e.selling_price=m.item_list.selling_price),"isTaxable"in m.item_list&&(e.isTaxable=m.item_list.isTaxable),"isVeg"in m.item_list&&(e.isVeg=m.item_list.isVeg);return"total_items"in m&&(u.total_items=m.total_items),"tax"in m&&(u.tax=m.tax),"question"in m&&(u.question=m.question),"feedback"in m&&(u.feedback=m.feedback),await u.save(),t.status(200).send({status:!0,message:"Order updated successfully",data:u,canceledBy:l})}catch(e){return t.status(500).send({status:!1,message:e.message})}},deleteOrderById:async(e,t)=>{try{let{orderId:s}=e.params;return s?a(s)?await r.findById(s)?(await r.deleteOne({_id:s}),t.status(200).send({status:!0,message:"Order deleted successfully"})):t.status(400).send({status:!1,message:"Order not found"}):t.status(400).send({status:!1,message:"Invalid OrderId"}):t.status(400).send({status:!1,message:"OrderId is required"})}catch(e){return t.status(500).send({status:!1,message:e.message})}},cancelOrder:async(e,t)=>{try{let{orderId:s}=e.params;if(s)return t.status(400).send({status:!1,message:"OrderId is required"});if(!a(s))return t.status(400).send({status:!1,message:"Invalid orderId"});let i=await r.findById(s);if(!i)return t.status(400).send({status:!1,message:"Order Not found"});if("CANCELED"===i.status)return t.status(400).send({status:!1,message:"This order is already canceled"});let{status:d,restaurant_id:o,customer_mobile:u,customer_name:l}=e.body,m=null;o&&(m=await n.findOne({userId:o}));let g=m?m.restaurantName:l;return i.status=d,await i.save(),t.status(200).send({status:!0,message:"Order Canceled Successfully",data:i,canceledBy:g})}catch(e){return t.status(500).send({status:!1,message:e.message})}},cancelOrderById:async(e,t)=>{try{let s=e.params.orderId,a=e.body,{status:n,question:i,feedback:d}=a,o=await r.findOne({_id:s});return o?g(n)?"Cancel"===o.status?t.status(400).send({status:!1,message:"This order is already cancelled"}):"Rejected"===o.status?t.status(400).send({status:!1,message:"This order is already Rejected"}):["Cancel","Rejected"].includes(n)?(await r.findOneAndUpdate({_id:s},{$set:{status:n,question:i,feedback:d}},{new:!0}),await o.save(),t.status(200).send({status:!0,message:"Order cancelled successfully",orderStatus:n})):t.status(400).send({status:!1,message:"Order status can be only 'Cancel' or 'Rejected'"}):t.status(400).send({status:!1,message:'status should be only - "Pending", "Approved", "Rejected", "Shipped", "Completed", or "Cancel"'}):t.status(404).send({status:!1,message:"Order not found"})}catch(e){return t.status(500).send({status:!1,message:e.message})}},updateOrderByRestaurant:async(e,t)=>{try{let{orderId:s}=e.params;if(!s)return t.status(400).send({status:!1,message:"Order Id is required"});if(!a(s))return t.status(400).send({status:!1,message:"Invalid orderId"});let n=await r.findById(s);if(!n)return t.status(400).send({status:!1,message:"Order not found"});let{status:i}=e.body;return"CANCELED"===n.status?t.status(400).send({status:!1,message:"This order is already canceled"}):(n.status=i,await n.save(),t.status(200).send({status:!0,message:"Order updated successfully",order:n}))}catch(e){return t.status(500).send({status:!1,message:e.message})}},uploadItemImages:async(e,t)=>{try{let{itemId:s}=e.params;if(!s)return t.status(400).send({status:!1,message:"Item Id is required"});let a=await itemModel.findById(s);if(!a)return t.status(400).send({status:!1,message:"Item not found"});let r=Array.isArray(e.files.itemImages)?e.files.itemImages:[e.files.itemImages];if(0===!r.length)return t.status(400).send({status:!1,message:"No item image uploaded"});let n=[];for(let e of r){let t="/items/",s=u(),a=d.v4()+"."+e.name.split(".").pop(),r=`http://${s}:${m}${t}`,i=o.join(__dirname,"..","..","items",a);e.mv(i,(e=>{if(e)throw e}));let l={imgName:a,imgUrl:r};n.push(l)}return t.status(200).send({status:!0,message:"Success",data:a})}catch(e){return t.status(500).send({status:!1,message:e.message})}},updateOrderStatus:async(e,t)=>{try{let s=e.params.orderId,a=await r.findOne({_id:s});if(!a)return t.status(404).send({status:!1,message:"Order Not found"});let n=e.body;return"status"in n&&(a.status=n.status),await a.save(),t.status(200).send({status:!0,message:"Order status updated successfully",orderStatus:n.status})}catch(e){return t.status(500).send({status:!1,message:e.message})}}}},4585:(e,t,s)=>{const a=s(5845),r=s(5003),n=s(9278);e.exports={addRating:async function(e,t){try{const{productId:s,customerId:a,name:i,rating:d,comment:o}=e.body,u=await r.findById(s);if(!u)return t.status(404).json({error:"Product not found."});if(!await n.findOne({customerId:a}))return t.status(404).json({error:"Customer not found."});const l=u.ratings.find((e=>e.customerId.toString()===a));if(l)l.name=i,l.rating=d,l.comment=o,l.time=(new Date).toLocaleString();else{let e=(new Date).toLocaleString();u.ratings.push({customerId:a,name:i,rating:d,comment:o,time:e})}const m=u.ratings,g=m.length,c=m.reduce(((e,t)=>e+t.rating),0),p=g>0?c/g:0;u.averageRating=p,u.totalRatingCount=g;const y={};for(let e=1;e<=5;e++){const t=m.filter((t=>t.rating===e)).length,s=t/g*100||0;y[e]=s}return u.ratingPercentages=y,await u.save(),t.status(200).json(u)}catch(s){const a={stack:s.stack,details:s.details||"No additional details provided",timestamp:(new Date).toISOString(),ip:e.ip,method:e.method,url:e.originalUrl};return logger.error(`Error in addRating API: ${s.message}`,{meta:a}),t.status(500).json({error:"Failed to add rating."})}},getAllRatings:async(e,t)=>{try{let s,r,n=e.params.productId,i=await a.find({productId:n}),d=0;for(let e=0;e<i.length;e++)d+=i[e].rating;return s=d/i.length,r=i.length,t.status(200).send({status:!0,data:i,averageRating:s,totalRatingCount:r})}catch(e){return t.status(500).send({status:!1,message:e.message})}},getAllProductsWithRating:async(e,t)=>{try{let{productId:s,ratingId:a}=e.params,n=await r.find().populate("ratingId");return t.status(200).send({status:!0,data:n})}catch(e){return t.status(500).send({status:!1,message:e.message})}}}},7687:(e,t,s)=>{const a=s(4915),r=s(2950),n=s(3903),d=s(6928),o=s(9896),{getCurrentIPAddress:u,generateRandomAlphaNumericID:l}=s(2191),{port:m}=s(669),{isValidObjectId:g}=s(6037),{adminSecretKey:c}=s(669),p=s(3804),y=s(6989),I=s(2438),f=s(5003),h=s(1323);function S(e,t,s,a){const r=(s-e)*(Math.PI/180),n=(a-t)*(Math.PI/180),i=Math.sin(r/2)*Math.sin(r/2)+Math.cos(e*(Math.PI/180))*Math.cos(s*(Math.PI/180))*Math.sin(n/2)*Math.sin(n/2);let d=(2*Math.atan2(Math.sqrt(i),Math.sqrt(1-i))*6371).toFixed(2);return parseFloat(d)}e.exports={authenticateAdmin:async(e,t)=>{try{let{userId:s,userName:r,email:n,profilePic:i}=e.body;const d=await a.findOne({userId:s});if(d)return t.status(200).send({status:!0,message:"Authentication successful",data:d});{let e={userId:s,userName:r,email:n,profilePic:i},d=await a.create(e);return t.status(200).send({status:!0,message:"Authentication successful",data:d})}}catch(s){let a={stack:s.stack,details:s.details||"No additional details provided",timestamp:(new Date).toISOString(),ip:e.ip,method:e.method,url:e.originalUrl};return I.error(`Error in authenticateAdmin API: ${s.message}`,{meta:a}),t.status(400).send({status:!1,message:s.message})}},updateRestaurantDatails:async(e,t)=>{try{const{userId:s}=e.params;if(!s)throw new p(s,"userId is required");let r=await a.findOne({userId:s});if(!r)throw y("restaurant",s);let n=e.body;if("userName"in n&&(r.userName=n.userName),"restaurantName"in n&&(r.restaurantName=n.restaurantName),"mobile"in n&&(r.mobile=n.mobile),"description"in n&&(r.description=n.description),"restaurant_address"in n&&("address"in n.restaurant_address&&(r.restaurant_address.address=n.restaurant_address.address),"apartment"in n.restaurant_address&&(r.restaurant_address.apartment=n.restaurant_address.apartment),"city"in n.restaurant_address&&(r.restaurant_address.city=n.restaurant_address.city),"post_code"in n.restaurant_address&&(r.restaurant_address.post_code=n.restaurant_address.post_code),"state"in n.restaurant_address&&(r.restaurant_address.state=n.restaurant_address.state)),"slug"in n){let e=await a.find();for(let s of e)if(n.slug===s.slug)return t.status(200).send({status:!1,message:"This slug is duplicate, please provide a new slug"});r.slug=n.slug}return"sitting_capacity"in n&&(r.sitting_capacity=n.sitting_capacity),"isVeg"in n&&(r.isVeg=n.isVeg),"max_allow_seating"in e.body&&(r.max_allow_seating=n.max_allow_seating),"contact_number"in n&&(r.contact_number=n.contact_number),"contact_person"in n&&(r.contact_person=n.contact_person),"website"in n&&(r.website=n.website),"rating_review_url"in n&&(r.rating_review_url=n.rating_review_url),"GST_number"in n&&(r.GST_number=n.GST_number),"isActive"in n&&(r.isActive=n.isActive),await r.save(),t.status(200).send({status:!0,message:"Restaurant updated successfully",data:r})}catch(s){let a={stack:s.stack,details:s.details||"No additional details provided",timestamp:(new Date).toISOString(),ip:e.ip,method:e.method,url:e.originalUrl};return s instanceof p?(I.error(`Error in updateRestaurantDatails API: Bad Request(Client Side Error). ${s.message}`,{meta:a}),t.status(400).send({status:!1,message:s.message,details:s.details})):s instanceof y?(I.error(`Error in updateRestaurantDatails API: Not Found Error. ${s.message}`,{meta:a}),t.status(500).send({status:!1,message:s.message,details:s.details})):(I.error(`Error in updateRestaurantDatails API: ${s.message}`,{meta:a}),t.status(400).send({status:!1,message:s.message}))}},addUpdateLogo:async(e,t)=>{try{const{userId:s}=e.params;if(!s)return t.status(400).send({status:!1,message:"userId is required"});let r=await a.findOne({userId:s});if(!r)return t.status(400).send({status:!1,message:"Restaurant not found"});let{File_Extension:i,File_Path:l,File_data:g,File_name:c}=e.body,p=Buffer.from(g,"base64"),y=u(),I="/logoImages/",f=n.v4()+i,h=`http://${y}:${m}${I}`,S=d.join(__dirname,"..","..","logoImages",f),_=r.logo.fileName;if(_){let e=d.join(__dirname,"..","..","logoImages",_);o.existsSync(e)&&o.unlinkSync(e)}o.writeFileSync(S,p);let w={fileName:f,filePath:h};return r.logo=w,await r.save(),t.status(200).send({status:!0,message:"logo updated successfully",logo:r.logo})}catch(s){let a={stack:s.stack,details:s.details||"No additional details provided",timestamp:(new Date).toISOString(),ip:e.ip,method:e.method,url:e.originalUrl};return I.error(`Error in addUpdateLogo API: ${s.message}`,{meta:a}),t.status(400).send({status:!1,message:s.message})}},deleteRestaurant:async(e,t)=>{try{let{userId:s}=e.params;if(!s)return t.status(400).send({status:!1,message:"userId is required"});let n=await a.findOne({userId:s});if(!n)return t.status(400).send({status:!1,message:"Restaurant not found"});const{reason:i,feedback:d}=e.body;let o={restaurant:n},u=JSON.stringify(o);await a.deleteOne({userId:s});let l={userId:s,deletedRestaurantData:u,reason:i,feedback:d,deletedAt:(new Date).toLocaleString()};return await r.create(l),t.status(200).send({status:!0,message:"Restaurant deleted successfully"})}catch(s){let a={stack:s.stack,details:s.details||"No additional details provided",timestamp:(new Date).toISOString(),ip:e.ip,method:e.method,url:e.originalUrl};return I.error(`Error in deleteRestaurant API: ${s.message}`,{meta:a}),t.status(400).send({status:!1,message:s.message})}},getRestaurantById:async(e,t)=>{try{let{userId:s}=e.params;if(!s)throw new p(s,"userId is required");let r=await a.findOne({userId:s});if(!r)throw new y("restaurant",s);let n=await f.find({userId:s}),i=await h.find({userId:s});return t.status(200).send({status:!0,message:"Success",restaurant:r,itemList:n,menuList:i})}catch(s){let a={stack:s.stack,details:s.details||"No additional details provided",timestamp:(new Date).toISOString(),ip:e.ip,method:e.method,url:e.originalUrl};return s instanceof p?(I.error(`Error in getRestaurantById API: Bad Request(Client Side Error). ${s.message}`,{meta:a}),t.status(400).send({status:!1,message:s.message,details:s.details})):s instanceof y?(I.error(`Error in getRestaurantById API: Not Found Error. ${s.message}`,{meta:a}),t.status(500).send({status:!1,message:s.message,details:s.details})):(I.error(`Error in getRestaurantById API: ${s.message}`,{meta:a}),t.status(400).send({status:!1,message:s.message}))}},getRestaurantsByLocation:async(e,t)=>{try{let{BY_LOCATION:s,BY_ADDRESS:r}=e.params,n=e.body;if(s){let e=n.latitude?n.latitude:null,s=n.longitude?n.longitude:null,r=n.range?n.range:5,i=await a.find({}),d=[];if(i.length)for(let t of i){let a;e&&s&&t.location.latitude&&t.location.longitude&&(a=S(e,s,t.location.latitude,t.location.longitude)),a<=r&&d.push(t)}return 0===d.length?t.status(400).send({status:!1,message:"No restaurant found"}):t.status(200).send({status:!0,message:"Success",data:d})}{let{address:e,apartment:s,city:r}=n;const i={};e&&(i["restaurant_address.address"]={$regex:e,$options:"i"}),s&&(i["restaurant_address.apartment"]={$regex:s,$options:"i"}),r&&(i["restaurant_address.city"]={$regex:r,$options:"i"});const d=await a.find(i);return 0===d.length?t.status(400).send({status:!1,message:"No restaurant found"}):t.status(200).send({status:!0,message:"Success",data:d})}}catch(s){let a={stack:s.stack,details:s.details||"No additional details provided",timestamp:(new Date).toISOString(),ip:e.ip,method:e.method,url:e.originalUrl};return I.error(`Error in getRestaurantByLocation API: ${s.message}`,{meta:a}),t.status(400).send({status:!1,message:s.message})}},getRestaurantBySearchData:async(e,t)=>{try{let{categoryId:s}=e.params,{search_data:r}=e.body;if(s){let e=await a.find({categoryId:s});return t.status(200).send({status:!0,message:"Success",data:e})}{let e={$or:[{restaurantName:{$regex:r,$options:i}},{description:{$regex:r,$options:i}},{isVeg:{$regex:r,$options:i}}]},s=await a.find(e);return t.status(200).send({status:!0,message:"Success",data:s})}}catch(s){let a={stack:s.stack,details:s.details||"No additional details provided",timestamp:(new Date).toISOString(),ip:e.ip,method:e.method,url:e.originalUrl};return I.error(`Error in getRestaurantBySearchData API: ${s.message}`,{meta:a}),t.status(400).send({status:!1,message:s.message})}},getAllRestaurants:async(e,t)=>{try{let e=await a.aggregate([{$sample:{size:10}}]);return t.status(200).send({status:!0,message:"Success",data:e})}catch(s){let a={stack:s.stack,details:s.details||"No additional details provided",timestamp:(new Date).toISOString(),ip:e.ip,method:e.method,url:e.originalUrl};return I.error(`Error in getAllRestaurants API: ${s.message}`,{meta:a}),t.status(400).send({status:!1,message:s.message})}},calculateDistance:S}},7774:(e,t,s)=>{const a=s(7178),r=s(4915),{isValidObjectId:n}=s(6037),i=s(2438);e.exports={addTable:async(e,t)=>{try{let{userId:s}=e.params;if(!s)return t.status(400).send({status:!1,message:"User Id is required"});if(!await r.findOne({userId:s}))return t.status(400).send({status:!1,message:"Restaurant Not Found"});let n,i,{table_name:d,table_type:o,head_count:u,isIndoor:l}=e.body;if(!d||!o||!u||void 0===l)return t.status(400).send({status:!1,message:"All fields are required"});do{n=Math.floor(1e5+899999*Math.random()),i=await a.findOne({tableId:n})}while(i);let m={userId:s,tableId:n,table_name:d,table_type:o,head_count:u,isIndoor:l},g=await a.create(m);return t.status(200).send({status:!0,message:"Table added successfully",data:g})}catch(s){let a={stack:s.stack,details:s.details||"No additional details provided",timestamp:(new Date).toISOString(),ip:e.ip,method:e.method,url:e.originalUrl};return i.error(`Error in addTable API: ${s.message}`,{meta:a}),t.status(500).send({status:!1,message:s.message})}},getAllTables:async(e,t)=>{try{let{userId:s}=e.params;if(!s)return t.status(400).send({status:!1,message:"User Id is required"});if(!await r.findOne({userId:s}))return t.status(400).send({status:!1,message:"Restaurant Not Found"});let n=await a.find({userId:s});return t.status(200).send({status:!0,message:"Success",data:n})}catch(s){let a={stack:s.stack,details:s.details||"No additional details provided",timestamp:(new Date).toISOString(),ip:e.ip,method:e.method,url:e.originalUrl};return i.error(`Error in getAllTables API: ${s.message}`,{meta:a}),t.status(500).send({status:!1,message:s.message})}},getTableById:async(e,t)=>{try{let{tableId:s}=e.params;if(!s)return t.status(400).send({status:!1,message:"Table Id is required"});if(!n(s))return t.status(400).send({status:!1,message:"Invalid TableId"});let r=await a.findById(s);return r?t.status(200).send({status:!0,message:"Success",data:r}):t.status(400).send({status:!1,message:"Table Not Found"})}catch(s){let a={stack:s.stack,details:s.details||"No additional details provided",timestamp:(new Date).toISOString(),ip:e.ip,method:e.method,url:e.originalUrl};return i.error(`Error in getTableById API: ${s.message}`,{meta:a}),t.status(500).send({status:!1,message:s.message})}},updateTableById:async(e,t)=>{try{let{tableId:s}=e.params;if(!s)return t.status(400).send({status:!1,message:"Table Id is required"});if(!n(s))return t.status(400).send({status:!1,message:"Invalid TableId"});let r=await a.findById(s);if(!r)return t.status(400).send(400).send({status:!1,message:"Table Not Found"});let i=e.body;return"table_name"in i&&(r.table_name=i.table_name),"table_type"in i&&(r.table_type=i.table_type),"head_count"in i&&(r.head_count=i.head_count),"isIndoor"in i&&(r.isIndoor=i.isIndoor),await r.save(),t.status(200).send({status:!0,message:"Table updated successfully",data:r})}catch(s){let a={stack:s.stack,details:s.details||"No additional details provided",timestamp:(new Date).toISOString(),ip:e.ip,method:e.method,url:e.originalUrl};return i.error(`Error in updateTableById API: ${s.message}`,{meta:a}),t.status(500).send({status:!1,message:s.message})}},deleteTableById:async(e,t)=>{try{let{tableId:s}=e.params;return s?n(s)?await a.findById(s)?(await a.deleteOne({_id:s}),t.status(200).send({status:!0,message:"Table deleted successfully"})):t.status(400).send(400).send({status:!1,message:"Table Not Found"}):t.status(400).send({status:!1,message:"Invalid TableId"}):t.status(400).send({status:!1,message:"Table Id is required"})}catch(s){let a={stack:s.stack,details:s.details||"No additional details provided",timestamp:(new Date).toISOString(),ip:e.ip,method:e.method,url:e.originalUrl};return i.error(`Error in deleteTableById API: ${s.message}`,{meta:a}),t.status(500).send({status:!1,message:s.message})}}}},3804:(e,t,s)=>{const{StatusCodes:a}=s(7138),r=s(2395);e.exports=class extends r{constructor(e,t){super("Bad Request!!!",a.BAD_REQUEST,`Invalid structure for ${e} provided`,t)}}},2395:e=>{class t extends Error{constructor(e,t,s,a){super(s),this.name=e,this.statusCode=t,this.details=a}}e.exports=t},8862:(e,t,s)=>{const{StatusCodes:a}=s(7138),r=s(2395);e.exports=class extends r{constructor(e){super("Internal Server Error",a.INTERNAL_SERVER_ERROR,"Something Went Wrong",e)}}},6989:(e,t,s)=>{const{StatusCodes:a}=s(7138),r=s(2395);e.exports=class extends r{constructor(e,t){super("Not Found",a.NOT_FOUND,`The requested resource ${e} with value ${t} not found`,{resourceName:e,resourceValue:t})}}},22:(e,t,s)=>{const{StatusCodes:a}=s(7138),r=s(2395);e.exports=class extends r{constructor(e,t=""){super(e,t),this.name="Unauthorized",this.statusCode=a.UNAUTHORIZED}}},6107:(e,t,s)=>{const a=s(6037),r=(a.Schema.Types.ObjectId,new a.Schema({adminId:{type:String,unique:!0,default:""},sessionToken:{type:String},name:{type:String,trim:!0},profilePic:{fileName:{type:String},filePath:{type:String}},gender:{type:String,enum:["MALE","FEMALE","OTHER","UNDEFINED"],default:"UNDEFINED"},password:{type:String,default:""},email:{type:String,default:""},mobile:{type:String,default:""},date_of_birth:{type:String,default:""}},{timestamps:!0}));e.exports=a.model("Admin",r)},4406:(e,t,s)=>{const a=s(6037),r=(a.Schema.Types.ObjectId,new a.Schema({name:{type:String},description:{type:String},category_image:{fileName:{type:String,default:""},filePath:{type:String,default:""}},cat_enum:{type:String,enum:["",""]}},{timestamps:!0}));e.exports=a.model("Category",r)},9278:(e,t,s)=>{const a=s(6037),r=(a.Schema.Types.ObjectId,new a.Schema({name:{type:String,trim:!0},customerId:{type:String,trim:!0},email:{type:String,trim:!0},dialingCode:{type:String,trim:!0},mobile:{type:String,unique:!0,required:!0},password:{type:String,min:8,max:15},DOB:{type:String},FCMToken:{type:String},gender:{type:String},question:{type:String},feedback:{type:String},address:{shipping:{street:{type:String,trim:!0},city:{type:String,trim:!0},state:{type:String,trim:!0},pincode:{type:Number}},billing:{street:{type:String,trim:!0},city:{type:String,trim:!0},city:{type:String,trim:!0},pincode:{type:Number}}}},{timestamps:!0}));e.exports=a.model("Customer",r)},2950:(e,t,s)=>{const a=s(6037),r=new a.Schema({userId:{type:String},deletedRestaurantData:{type:String},reason:{type:String},feedback:{type:String},deletedAt:{type:String}},{timestamps:!0});e.exports=a.model("DeletedRestaurant",r)},5003:(e,t,s)=>{const a=s(6037),r=a.Schema.Types.ObjectId,n=new a.Schema({userId:{type:String,default:""},menuId:{type:String,default:""},item_name:{type:String,default:""},menuName:{type:String,default:""},categoryId:{type:r,ref:"Category"},categoryName:{type:String,default:""},description:{type:String,default:""},selling_price:{type:Number,default:0},isTaxable:{type:Boolean},preparing_time:{type:String,default:""},notes:{type:String,default:""},item_images:[{fileName:{type:String,default:""},filePath:{type:String,default:""}}],ratings:[{customerId:{type:r,ref:"Customer"},name:{type:String},rating:{type:Number},comment:{type:String},time:{type:String}}],averageRating:{type:Number},totalRatingCount:{type:Number},ratingPercentages:{},visit_count:{type:Number,default:0},status:{type:Boolean},seo_keywords:[],video_link:{type:String,default:""},isVeg:{type:Boolean}},{timestamps:!0});e.exports=a.model("Item",n)},1323:(e,t,s)=>{const a=s(6037),r=(a.Schema.Types.ObjectId,new a.Schema({userId:{type:String,default:""},title:{type:String,default:""},thumbnail:{fileName:{type:String,default:""},filePath:{type:String,default:""}},description:{type:String,default:""},isActive:{type:Boolean,default:!0}},{timestamps:!0}));e.exports=a.model("Menu",r)},4470:(e,t,s)=>{const a=s(6037),r=(a.Schema.Types.ObjectId,new a.Schema({orderID:{type:Number},customerId:{type:String},CGST:{type:Number},SGST:{type:Number},totalProduct:{type:Number},paymentType:{type:String},tax:{type:Number},total:{type:Number},grandTotal:{type:Number},address:{type:String},apartment:{type:String},city:{type:String},countryCode:{type:String},countryName:{type:String},post_code:{type:String},state_code:{type:String},state:{type:String},email:{type:String},f_name:{type:String},l_name:{type:String},mobile:{type:String},status:{type:String,enum:["Pending","Approved","Rejected","Shipped","Completed","Cancel"],default:"Pending"},question:{type:String},feedback:{type:String},productList:[{productId:{type:String},restaurant_id:{type:String},MrpTotal:{type:Number},SubTotal:{type:Number},averageRating:{type:Number},preparing_time:{type:String},cartQty:{type:Number},description:{type:String},isVeg:{type:Boolean},mrp:{type:Number},name:{type:String},salePrice:{type:Number},qty:{type:Number},skuCode:{type:String},thumbnail:{type:String},totalRatingCount:{type:Number}}]},{timestamps:!0}));e.exports=a.model("Order",r)},5845:(e,t,s)=>{const a=s(6037),r=a.Schema.Types.ObjectId,n=new a.Schema({productId:{type:r,ref:"Product"},ratings:[{customerId:{type:String},name:{type:String},rating:{type:Number},comment:{type:String},time:{type:String}}]},{timestamps:!0});e.exports=a.model("Rating",n)},4915:(e,t,s)=>{const a=s(6037),r=a.Schema.Types.ObjectId,n=new a.Schema({userId:{type:String,required:!0,unique:!0},userName:{type:String},email:{type:String},mobile:{type:String},profilePic:{type:String},restaurantName:{type:String,default:""},description:{type:String,default:""},restaurant_address:{address:{type:String,default:""},apartment:{type:String,default:""},city:{type:String,default:""},post_code:{type:String,default:""},state:{type:String,default:""}},location:{latitude:{type:Number,default:0},longitude:{type:Number,default:0}},logo:{fileName:{type:String,default:""},filePath:{type:String,default:""}},slug:{type:String,default:""},categoryId:{type:r,ref:"Category"},categoryName:{type:String,default:""},sitting_capacity:{type:Number,default:0},isVeg:{type:Boolean,default:!0},max_allow_seating:{type:Number,default:0},banners:[{fileName:{type:String,default:""},filePath:{type:String,default:""}}],contact_number:{type:String,default:""},contact_person:{type:String,default:""},website:{type:String,default:""},rating_review_url:{type:String,default:""},GST_number:{type:String,default:""},tax:{type:String},isActive:{type:Boolean,default:!0}},{timestamps:!0});e.exports=a.model("Restaurant",n)},7178:(e,t,s)=>{const a=s(6037),r=(a.Schema.Types.ObjectId,new a.Schema({userId:{type:String},tableId:{type:String,required:!0,unique:!0},table_name:{type:String,required:!0,unique:!0},table_type:{type:String},head_count:{type:Number},isIndoor:{type:Boolean}},{timestamps:!0}));e.exports=a.model("Table",r)},2508:(e,t,s)=>{const a=s(7252).Router(),{createAdmin:r,adminLogin:n,getOneDayBookings:i,getOneWeekBookings:d,getOneMonthBookings:o,getOneYearBookings:u,getAllBookingsOfUser:l}=s(6593);a.post("/api/v1/createSuperAdmin",r),a.post("/api/v1/loginSuperAdmin",n),a.get("/api/v1/getOneDayBookings/:adminId/:sessionToken/:date?",i),a.get("/api/v1/getOneWeekBookings/:adminId/:sessionToken/:startDate?/:endDate?",d),a.get("/api/v1/getOneMonthBookings/:adminId/:sessionToken/:month/:year",o),a.get("/api/v1/getOneYearBookings/:adminId/:sessionToken/:year",u),a.get("/api/v1/getUserAllBookings/:adminId/:sessionToken/:userId",l),e.exports=a},2683:(e,t,s)=>{const a=s(7252).Router(),{addCategory:r,getCategoryById:n,getAllCategories:i,updateCategory:d,deleteCategory:o}=s(452);a.post("/api/v1/addCategory",r),a.get("/api/v1/getCategory/:categoryId",n),a.get("/api/v1/getAllCategories",i),a.put("/api/v1/updateCategory/:categoryId",d),a.delete("/api/v1/deleteCategory/:categoryId",o),e.exports=a},5283:(e,t,s)=>{const a=s(7252).Router(),{loginCustomer:r,updateCustomerById:n,getAllCustomers:i,getCustomerById:d,deleteCustomerById:o}=s(2020);a.post("/api/v1/logincustomer",r),a.get("/api/v1/getAllCustomers",i),a.get("/api/v1/getCustomerById/:customerId",d),a.put("/api/v1/updatecustomer/:customerId",n),a.delete("/api/v1/deleteaccount/:customerId",o),e.exports=a},6051:(e,t,s)=>{const a=s(7252).Router(),{getDashboard:r,getAllBannerImages:n,updateBannerImages:i,deleteBannerImage:d,createDashboard:o}=s(9506);a.get("/api/v1/dashboard/:customerId?",o),a.get("/api/v1/getDashboard/:userId",r),a.get("/api/v1/getBanners/:userId",n),a.put("/api/v1/addOrUpdateBanner/:userId",i),a.delete("/api/v1/deleteBanner/:imageId/:userId",d),e.exports=a},8532:(e,t,s)=>{const a=s(7252).Router(),{addItems:r,getAllItems:n,addUpdateItemImages:i,updateItemById:d,deleteItemById:o,deleteItemImages:u,getItemsBySearchKeywords:l,getItemsByLocationOrSearchData:m,getItemById:g}=s(7295);a.post("/api/v1/addItem/:userId",r),a.post("/api/v1/updateItemImages/:itemId",i),a.get("/api/v1/getAllItems/:userId",n),a.get("/api/v1/viewProductWithRestaurant/:itemId/:userId",g),a.get("/api/v1/allItemSearchByKeywords/:categoryId?",l),a.put("/api/v1/updateItem/:itemId",d),a.delete("/api/v1/deleteItem/:itemId",o),a.delete("/api/v1/deleteItemImage/:itemId/:imageId",u),a.get("/api/v1/getItemByLocationOrSearchData/:BY_LOCATION?",m),e.exports=a},56:(e,t,s)=>{const a=s(7252).Router(),{addMenu:r,getAllMenus:n,getMenuById:i,updateMenu:d,deleteMenu:o}=s(8671);a.post("/api/v1/addMenu/:userId",r),a.get("/api/v1/getAllMenus/:userId",n),a.get("/api/v1/getMenu/:menuId",i),a.put("/api/v1/updateMenu/:menuId",d),a.delete("/api/v1/deleteMenu/:menuId",o),e.exports=a},8139:(e,t,s)=>{const a=s(7252).Router(),{createOrder:r,getAllOrders:n,getOrderById:i,updateOrderById:d,cancelOrderById:o,updateOrderStatus:u}=s(9486);a.post("/api/v1/createOrder/:customerId",r),a.get("/api/v1/getAllOrders/:restaurantId",n),a.get("/api/v1/getOder/:orderId",i),a.put("/api/v1/updateOrder/:orderId",d),a.put("/api/v1/cancelorder/:orderId",o),a.put("/api/v1/updateOrderStatus/:orderId",u),e.exports=a},5726:(e,t,s)=>{const a=s(7252).Router(),{addRating:r}=s(4585);a.post("/api/v1/addRating",r),e.exports=a},4804:(e,t,s)=>{const a=s(7252).Router(),{authenticateAdmin:r,updateRestaurantDatails:n,addUpdateLogo:i,getAllRestaurants:d,getRestaurantById:o,deleteRestaurant:u,getRestaurantsByLocation:l,getRestaurantBySearchData:m}=s(7687);a.post("/api/v1/authenticateRestaurant",r),a.get("/api/v1/viewRestaurant/:userId",o),a.get("/api/v1/getAllRestaurants",d),a.get("/api/v1/getRestaurantByLocation/:BY_LOCATION?/:BY_ADDRESS?",l),a.get("/api/v1/allRestaurantSearchByKeywords/:categoryId",m),a.post("/api/v1/updateRestaurant/:userId",n),a.post("/api/v1/updateLogo/:userId",i),a.delete("/api/v1/deleteRestaurant/:userId",u),e.exports=a},9727:(e,t,s)=>{const a=s(7252).Router(),{addTable:r,getAllTables:n,getTableById:i,updateTableById:d,deleteTableById:o}=s(7774);a.post("/api/v1/addTable/:userId",r),a.get("/api/v1/getAllTables/:userId",n),a.get("/api/v1/getTable/:tableId",i),a.put("/api/v1/updateTable/:tableId",d),a.delete("/api/v1/deleteTable/:tableId",o),e.exports=a},8602:(e,t,s)=>{const a=s(2395),{StatusCodes:r}=s(7138);e.exports=function(e,t,s,n){return e instanceof a?s.status(e.statusCode).json({success:!1,message:e.message,err:e.details,data:{}}):s.status(r.INTERNAL_SERVER_ERROR).json({success:!1,message:"Something went wrong",err:e,data:{}})}},2191:(e,t,s)=>{const a=s(857),r=s(7906);e.exports={isValidString:e=>"string"==typeof e&&e.trim().length>0,isValidEmail:e=>r.isEmail(e),isValidPassword:e=>/^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[@$!%*?&])[A-Za-z\d@$!%*?&]{8,}$/.test(e),isValidPhoneNumber:e=>r.isMobilePhone(e,"any",{strictMode:!0}),isValidURL:e=>r.isURL(e),isValidPostalCode:(e,t)=>r.isPostalCode(e,t),isValidBoolean:e=>"boolean"==typeof e,isValidInteger:e=>Number.isInteger(e),isValidGSTNumber:e=>r.isAlphanumeric(e)&&15===e.length,isValidStatus:function(e){return-1!=["Pending","Approved","Rejected","Shipped","Completed","Cancel"].indexOf(e)},getCurrentIPAddress:()=>{let e=a.networkInterfaces();return Object.values(e).flat().filter((e=>"IPv4"===e.family&&!e.internal)).map((e=>e.address))[0]},generateRandomAlphaNumericID:function(e){let t="";for(let s=0;s<e;s++)t+="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789"[Math.floor(62*Math.random())];return t},generateRandomNumericId:function(e){if(e<=0)throw new Error("Length must be a positive integer");let t="";for(let s=0;s<e;s++)t+="0123456789"[Math.floor(10*Math.random())];return t}}},5486:e=>{"use strict";e.exports=require("bcrypt")},3268:e=>{"use strict";e.exports=require("body-parser")},7174:e=>{"use strict";e.exports=require("compression")},8577:e=>{"use strict";e.exports=require("cors")},818:e=>{"use strict";e.exports=require("dotenv")},7252:e=>{"use strict";e.exports=require("express")},6376:e=>{"use strict";e.exports=require("express-fileupload")},2239:e=>{"use strict";e.exports=require("express-mongo-sanitize")},1763:e=>{"use strict";e.exports=require("express-rate-limit")},2525:e=>{"use strict";e.exports=require("helmet")},8900:e=>{"use strict";e.exports=require("hpp")},7138:e=>{"use strict";e.exports=require("http-status-codes")},829:e=>{"use strict";e.exports=require("jsonwebtoken")},6037:e=>{"use strict";e.exports=require("mongoose")},3903:e=>{"use strict";e.exports=require("uuid")},7906:e=>{"use strict";e.exports=require("validator")},5124:e=>{"use strict";e.exports=require("winston")},8639:e=>{"use strict";e.exports=require("winston-mongodb")},9896:e=>{"use strict";e.exports=require("fs")},857:e=>{"use strict";e.exports=require("os")},6928:e=>{"use strict";e.exports=require("path")}},t={};function s(a){var r=t[a];if(void 0!==r)return r.exports;var n=t[a]={exports:{}};return e[a](n,n.exports,s),n.exports}const a=s(7252),r=s(3268),n=s(6376),d=s(8577),o=s(2525),u=s(1763),l=s(7174),m=s(2239),g=s(8900),{port:c}=s(669),p=s(8602),{connectToDatabase:y}=s(3983),I=(s(2438),a());I.use(o()),I.use(d()),I.use(l()),I.use(m()),I.use(g()),I.use(a.json({limit:"50mb"})),I.use(a.urlencoded({extended:!0,limit:"50mb"})),I.use(r.json({limit:"50mb"})),I.use(n());const f=s(2508),h=s(2683),S=s(5283),_=s(6051),w=s(8532),b=s(56),v=s(8139),N=s(5726),O=s(4804),k=s(9727);I.use(o.contentSecurityPolicy({directives:{defaultSrc:["'self'"],scriptSrc:["'self'","'unsafe-inline'"],objectSrc:["'none'"],upgradeInsecureRequests:[]}})),I.use(o.hsts({maxAge:31536e3,includeSubDomains:!0,preload:!0}));const A=u({windowMs:9e5,max:100,message:"Too many requests from this IP, please try again later."});I.use(A),I.use("/categoryImages",a.static(__dirname+"/categoryImages")),I.use("/bannerImages",a.static(__dirname+"/bannerImages")),I.use("/itemImages",a.static(__dirname+"/itemImages")),I.use("/menuImages",a.static(__dirname+"/menuImages")),I.use("/logoImages",a.static(__dirname+"/logoImages")),I.use("/",f),I.use("/",h),I.use("/",S),I.use("/",_),I.use("/",w),I.use("/",b),I.use("/",v),I.use("/",N),I.use("/",O),I.use("/",k),I.get("/",((e,t)=>{t.send("<h1>Multi Vender App is Up and Running</h1>")})),I.use(p);const $=I.listen(c,(async()=>{console.log("App is running on port",c),await y}));process.on("unhandledRejection",((e,t)=>{console.error("Unhandled Rejection at:",t,"reason:",e),$.close((()=>{process.exit(1)}))})),process.on("uncaughtException",(e=>{console.error("Uncaught Exception thrown:",e),$.close((()=>{process.exit(1)}))})),process.on("SIGTERM",(()=>{console.log("SIGTERM signal received: closing HTTP server"),$.close((()=>{console.log("HTTP server closed"),process.exit(0)}))})),process.on("SIGINT",(()=>{console.log("SIGINT signal received: closing HTTP server"),$.close((()=>{console.log("HTTP server closed"),process.exit(0)}))}))})();
//# sourceMappingURL=index.js.map